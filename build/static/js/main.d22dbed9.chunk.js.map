{"version":3,"sources":["progress.js","App.js","index.js","video.mp4"],"names":["ProgressBar","styled","div","props","loaded","Progress","useState","setVidData","start","setStart","precentage","setPrecentage","downloadProg","a","fetch","vid","response","reader","body","getReader","totalLength","headers","get","received","chunks","updateWithDataProgress","v","Math","round","read","done","value","push","length","chunksAll","Uint8Array","position","chunk","set","blob","Blob","type","content","URL","createObjectURL","useEffect","width","height","autoPlay","src","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0YAGA,IAAMA,E,MAAcC,EAAOC,IAAV,KACN,SAACC,GAAD,OAAWA,EAAMC,UA2EbC,EAtEE,WAAO,IAAD,EACSC,mBAAS,MADlB,mBACLC,GADK,aAEKD,oBAAS,GAFd,mBAEdE,EAFc,KAEPC,EAFO,OAGeH,mBAAS,GAHxB,mBAGdI,EAHc,KAGFC,EAHE,KAKfC,EAAY,uCAAG,0DAAAC,EAAA,sEAEEC,MAAMC,KAFR,OAEfC,EAFe,OAGfC,EAASD,EAASE,KAAKC,YAGvBC,GAAeJ,EAASK,QAAQC,IAAI,kBAGpCC,EAAW,EACXC,EAAS,GACPC,EAAyB,SAACC,GAC9B,OAAIA,IAAMC,KAAKC,MAAOL,EAAWH,EAAe,KACvCO,KAAKC,MAAOL,EAAWH,EAAe,KAEtCM,GAfQ,wBAoBaT,EAAOY,OApBpB,oBAoBTC,EApBS,EAoBTA,KAAMC,EApBG,EAoBHA,OAEVD,EAtBa,qDA4BjBN,EAAOQ,KAAKD,GAEZR,GAAYQ,EAAME,OAElBtB,EAAcc,GAhCG,uBAsCnB,IAHIS,EAAY,IAAIC,WAAWZ,GAC3Ba,EAAW,EAEf,MAAkBZ,EAAlB,eAASa,EAAiB,KACxBH,EAAUI,IAAID,EAAOD,GACrBA,GAAYC,EAAMJ,OAGhBM,EAAO,IAAIC,KAAK,CAACN,GAAY,CAAEO,KAAM,cACrCC,EAAUC,IAAIC,gBAAgBL,GAClC9B,GAAS,GACTF,EAAWmC,GA9CQ,4CAAH,qDAqDlB,OAJAG,qBAAU,WACRjC,MACC,IAGD,6BACE,kBAACZ,EAAD,CAAaI,OAAQM,GAAaA,EAAlC,KACCF,GACC,2BAAOsC,MAAM,MAAMC,OAAO,MAAMC,UAAQ,GACtC,4BAAQC,IAAKlC,IAAK0B,KAAK,iBChElBS,EAJH,WACV,OAAO,kBAAC,EAAD,OCATC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.d22dbed9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport vid from \"./video.mp4\";\r\nimport styled from \"styled-components\";\r\nconst ProgressBar = styled.div`\r\n  width: ${(props) => props.loaded}%;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background-color: red;\r\n`;\r\nconst Progress = () => {\r\n  const [vidData, setVidData] = useState(null);\r\n  const [start, setStart] = useState(false);\r\n  const [precentage, setPrecentage] = useState(0);\r\n\r\n  const downloadProg = async () => {\r\n    // resp and reader\r\n    let response = await fetch(vid);\r\n    let reader = response.body.getReader();\r\n\r\n    // get total content length\r\n    let totalLength = +response.headers.get(\"Content-Length\");\r\n\r\n    // start reading\r\n    let received = 0;\r\n    let chunks = [];\r\n    const updateWithDataProgress = (v) => {\r\n      if (v !== Math.round((received / totalLength) * 100)) {\r\n        return Math.round((received / totalLength) * 100);\r\n      } else {\r\n        return v;\r\n      }\r\n    };\r\n    while (true) {\r\n      // extract chunks or finish\r\n      const { done, value } = await reader.read();\r\n\r\n      if (done) {\r\n        // end loop\r\n        break;\r\n      }\r\n\r\n      // save indivisual chunks\r\n      chunks.push(value);\r\n      // update total recevied so far\r\n      received += value.length;\r\n      // update percentage for progress bar in the UI\r\n      setPrecentage(updateWithDataProgress);\r\n    }\r\n\r\n    let chunksAll = new Uint8Array(received);\r\n    let position = 0;\r\n\r\n    for (let chunk of chunks) {\r\n      chunksAll.set(chunk, position);\r\n      position += chunk.length;\r\n    }\r\n\r\n    let blob = new Blob([chunksAll], { type: \"video/mp4\" });\r\n    let content = URL.createObjectURL(blob);\r\n    setStart(true);\r\n    setVidData(content);\r\n  };\r\n\r\n  useEffect(() => {\r\n    downloadProg();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ProgressBar loaded={precentage}>{precentage}%</ProgressBar>\r\n      {start && (\r\n        <video width=\"500\" height=\"500\" autoPlay>\r\n          <source src={vid} type=\"video/mp4\"></source>\r\n        </video>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Progress from \"./progress\";\r\n\r\nconst App = () => {\r\n  return <Progress></Progress>;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/video.15b75f5a.mp4\";"],"sourceRoot":""}