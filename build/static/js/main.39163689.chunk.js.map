{"version":3,"sources":["assets/videoo.mp4","assets/live.jpg","theme/theme.js","theme/ThemeContext.js","ControlsContext.js","board/buttons/ProgressRing.js","board/buttons/ControlButton.js","comps/ScreenComp.js","board/buttons/Buttons.js","LogContext.js","board/log/LogData.js","comps/progress.js","board/log/Log.js","board/Contact/Settings.js","Board.js","Screen.js","ControlStation.js","App.js","index.js"],"names":["module","exports","light","body","bg","ScreenComp","border","FrameLine","settingsIcons","shellAndProg","color","dark","ThemeContext","createContext","ControlsContext","Circle","styled","circle","props","theme","use","launched","ProgressRing","useContext","stages","radius","stroke","progress","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","fire","strokeWidth","strokeDasharray","style","r","cx","cy","Message","span","Wrapper","button","btnStyle","ControlButton","dispatch","useState","inc","setInc","setBtnStyle","useEffect","ready","document","querySelector","addEventListener","type","disabled","start","onClick","setTimeout","payload","text","handleFiring","stateText","div","isCameraView","isLog","UpperFrame","UpperFrameLine","DotOne","DotTwo","Content","children","Buttons","LogContext","ShellLike","LogData","log","shell","useRef","el","createElement","innerHTML","current","append","scrollIntoView","ref","id","bubbling","keyframes","ProgressBar","loaded","ProgressContainer","Precentage","Progress","precentage","setPrecentage","setLog","downloadProg","a","fetch","vid","response","reader","getReader","totalLength","headers","get","received","chunks","updateWithDataProgress","v","round","read","done","value","toString","slice","push","length","chunksAll","Uint8Array","position","chunk","set","blob","Blob","content","URL","createObjectURL","vidData","className","LogAndProgressContainer","Log","MyFontAwsm","FontAwesomeIcon","SettingsOptions","SettingsAndFollow","Social","Settings","setTheme","icon","e","then","fullscreenEnabled","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","alert","navigator","userAgent","href","target","Controls","Board","signaling","Video","video","Display","LiveImg","LiveStatus","Screen","vidRef","play","onContextMenu","preventDefault","src","Container","ControlStation","library","add","fab","faLinkedin","faRedhat","faSun","faMoon","faCompress","faVolumeMute","faUserAstronaut","Globals","createGlobalStyle","WrapGlobals","initialState","reducer","state","action","App","useReducer","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39163689.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/videoo.3f19604a.mp4\";","module.exports = __webpack_public_path__ + \"static/media/live.3fd06b63.jpg\";","export const light = {\r\n  body: {\r\n    bg: \"linen\",\r\n  },\r\n  ScreenComp: {\r\n    border: \"#caabab\",\r\n    FrameLine: {\r\n      bg: \"rgb(225, 211, 211)\",\r\n    },\r\n  },\r\n  settingsIcons: {\r\n    bg: \"rgb(87, 87, 90)\",\r\n  },\r\n  shellAndProg: {\r\n    bg: \"rgb(221, 217, 217)\",\r\n    color: \"black\",\r\n  },\r\n};\r\nexport const dark = {\r\n  body: {\r\n    bg: \"black\",\r\n  },\r\n  ScreenComp: {\r\n    border: \"#575353\",\r\n    FrameLine: {\r\n      bg: \"rgb(103, 103, 103)\",\r\n    },\r\n  },\r\n  settingsIcons: {\r\n    bg: \"#c7c5c5\",\r\n  },\r\n  shellAndProg: {\r\n    bg: \"#3f3f3f\",\r\n    color: \"white\",\r\n  },\r\n};\r\n","import { createContext } from \"react\";\r\nconst ThemeContext = createContext();\r\n\r\nexport default ThemeContext;\r\n","import { createContext } from \"react\";\r\n\r\nconst ControlsContext = createContext();\r\nexport default ControlsContext;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ThemeContext from \"../../theme/ThemeContext\";\r\nimport ControlsContext from \"../../ControlsContext\";\r\n\r\nconst Circle = styled.circle`\r\n  fill: ${(props) => props.theme.use.shellAndProg.bg};\r\n  stroke: ${(props) => (props.launched ? \"green\" : \"rgb(243,90,90)\")};\r\n`;\r\n\r\nconst ProgressRing = (props) => {\r\n  const theme = useContext(ThemeContext);\r\n  const [stages] = useContext(ControlsContext);\r\n  const { radius, stroke, progress } = props;\r\n  let normalizedRadius = radius - stroke * 2;\r\n  let circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\r\n\r\n  return (\r\n    <svg height={radius * 2} width={radius * 2}>\r\n      <Circle\r\n        launched={stages.fire ? true : false}\r\n        theme={theme}\r\n        strokeWidth={stroke}\r\n        strokeDasharray={circumference + \" \" + circumference}\r\n        style={{ strokeDashoffset }}\r\n        r={normalizedRadius}\r\n        cx={radius}\r\n        cy={radius}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ProgressRing;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport ProcessRing from \"./ProgressRing\";\r\nimport styled from \"styled-components\";\r\nimport ControlsContext from \"../../ControlsContext\";\r\nimport ThemeContext from \"../../theme/ThemeContext\";\r\n\r\nconst Message = styled.span`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  color: ${(props) => props.theme.use.shellAndProg.color};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Wrapper = styled.button`\r\n  width: 50%;\r\n  margin: auto;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  transform: scale(${(props) => (props.btnStyle ? 0.9 : 1)});\r\n  &:hover {\r\n    outline: none;\r\n    background: none;\r\n  }\r\n`;\r\n\r\nconst ControlButton = () => {\r\n  const theme = useContext(ThemeContext);\r\n  // eslint-disable-next-line\r\n  const [stages, dispatch] = useContext(ControlsContext);\r\n  const [inc, setInc] = useState(0);\r\n  const [btnStyle, setBtnStyle] = useState(false);\r\n  const styleBtn = () => {\r\n    // style btn\r\n    setBtnStyle(true);\r\n    // style btn back\r\n    setTimeout(() => {\r\n      setBtnStyle(false);\r\n    }, 100);\r\n  };\r\n  const handleFiring = () => {\r\n    // fire\r\n    if (stages.ready) {\r\n      dispatch({\r\n        type: \"FIRE\",\r\n        payload: {\r\n          text: \"Launched\",\r\n          fire: true,\r\n        },\r\n      });\r\n    } else {\r\n      if (inc === 100) {\r\n        // when inc === 100\r\n        return;\r\n      }\r\n      // on first load\r\n      if (stages.start === false) {\r\n        dispatch({\r\n          type: \"START\",\r\n        });\r\n        setInc(inc + 50);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // lead button to 'fire' when vid donwload finishes\r\n    if (stages.ready) {\r\n      setInc(100);\r\n      // watch for vid end to prompt repeat\r\n      document.querySelector(\"#vid\").addEventListener(\"ended\", () => {\r\n        // reset button progress\r\n        setInc(0);\r\n        // reste all app state\r\n        dispatch({\r\n          type: \"REPEAT\",\r\n        });\r\n      });\r\n    }\r\n  }, [stages.ready, dispatch]);\r\n\r\n  return (\r\n    <Wrapper\r\n      btnStyle={btnStyle}\r\n      disabled={stages.start === true && stages.ready === false && true}\r\n      onClick={() => {\r\n        styleBtn();\r\n        handleFiring();\r\n      }}\r\n    >\r\n      <Message theme={theme}>{stages.stateText}</Message>\r\n      <ProcessRing radius={50} stroke={5} progress={inc} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ControlButton;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ThemeContext from \"../theme/ThemeContext\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: ${(props) => (props.isCameraView ? \"75%\" : \"90%\")};\r\n  border: 1px solid ${(props) => props.theme.ScreenComp.border};\r\n  padding: 0.5rem;\r\n  border-radius: 10px;\r\n  margin: ${(props) => (props.isCameraView ? \"0.8rem 0\" : \"0.5rem auto\")};\r\n  max-height: ${(props) =>\r\n    props.isCameraView ? \"100%\" : props.isLog ? \"100%\" : \"23.333333vh\"};\r\n`;\r\nconst UpperFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nconst UpperFrameLine = styled.div`\r\n  background-color: ${(props) => props.theme.ScreenComp.FrameLine.bg};\r\n  height: 6px;\r\n  border-radius: 10px;\r\n  flex-grow: 2;\r\n  margin-right: auto;\r\n`;\r\nconst DotOne = styled.div`\r\n  padding: 4px;\r\n  background-color: rgb(243, 90, 90);\r\n  border-radius: 50%;\r\n  margin-left: 0.5rem;\r\n  margin-right: 0.5rem;\r\n`;\r\nconst DotTwo = styled.div`\r\n  padding: 4px;\r\n  background-color: rgb(89, 89, 247);\r\n  border-radius: 50%;\r\n`;\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  padding: ${(props) => (props.isCameraView ? \"0.5rem\" : \"0\")};\r\n  overflow: hidden;\r\n  margin-top: 0.5rem;\r\n  border-radius: 10px;\r\n  background: ${(props) => (props.isCameraView ? \"transparent\" : \"inherit\")};\r\n  display: flex;\r\n  height: ${(props) =>\r\n    props.isCameraView === true\r\n      ? \"100%\"\r\n      : props.isLog\r\n      ? \"100%\"\r\n      : `${100 / 3.5}vh`};\r\n  overflow: ${(props) => (props.isLog ? \"scroll\" : \"hidden\")};\r\n  /* add scroll bar styles here  */\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    display: none;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    display: none;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ScreenComp = ({ children, isCameraView, isLog }) => {\r\n  const { use } = useContext(ThemeContext);\r\n  return (\r\n    <Wrapper isCameraView={isCameraView} isLog={isLog} theme={use}>\r\n      <UpperFrame>\r\n        <UpperFrameLine theme={use} />\r\n        <DotOne />\r\n        <DotTwo />\r\n      </UpperFrame>\r\n      <Content isCameraView={isCameraView} isLog={isLog}>\r\n        {children}\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ScreenComp;\r\n","import React from \"react\";\r\nimport ControlButton from \"./ControlButton\";\r\nimport ScreenComp from \"../../comps/ScreenComp\";\r\n\r\nconst Buttons = () => {\r\n  return (\r\n    <ScreenComp isCameraView={false}>\r\n      <ControlButton />\r\n    </ScreenComp>\r\n  );\r\n};\r\nexport default Buttons;\r\n","import { createContext } from \"react\";\r\n\r\nconst LogContext = createContext();\r\n\r\nexport default LogContext;\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LogContext from \"../../LogContext\";\r\nimport ScreenComp from \"../../comps/ScreenComp\";\r\nimport ControlsContext from \"../../ControlsContext\";\r\nimport ThemeContext from \"../../theme/ThemeContext\";\r\n\r\nconst ShellLike = styled.div`\r\n  background-color: ${(props) => props.theme.shellAndProg.bg};\r\n  align-self: center;\r\n  margin: 0 0.5rem;\r\n  padding: 1rem;\r\n  height: 100%;\r\n  width: 100%;\r\n  color: ${(props) => props.theme.shellAndProg.color};\r\n  overflow: auto;\r\n  /* add scroll bar styles here  */\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    display: none;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    display: none;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst LogData = () => {\r\n  const { use } = useContext(ThemeContext);\r\n  // eslint-disable-next-line\r\n  const [log, setLog] = useContext(LogContext);\r\n  // eslint-disable-next-line\r\n  const [stages, dispatch] = useContext(ControlsContext);\r\n  const shell = useRef();\r\n\r\n  useEffect(() => {\r\n    let el = document.createElement(\"p\");\r\n    el.innerHTML = \"_> \" + log;\r\n    shell.current.append(el);\r\n    el.scrollIntoView();\r\n  }, [log]);\r\n\r\n  useEffect(() => {\r\n    if (stages.start === true && stages.ready !== true) {\r\n      let el = document.createElement(\"p\");\r\n      el.innerHTML = \"_> <span style=color:red>initializing</span>\";\r\n      shell.current.append(el);\r\n      el.scrollIntoView();\r\n    }\r\n\r\n    if (stages.ready === true) {\r\n      let el = document.createElement(\"p\");\r\n      el.innerHTML =\r\n        \"<p>_> <span style=color:green> succesfull</span></p> <p>_> launch now</p>\";\r\n      shell.current.append(el);\r\n      el.scrollIntoView();\r\n\r\n      // wtach for vid end to reset shell screen\r\n      document.querySelector(\"#vid\").addEventListener(\"ended\", () => {\r\n        shell.current.innerHTML = \"_>\";\r\n      });\r\n    }\r\n  }, [stages.start, stages.ready]);\r\n\r\n  return (\r\n    <ScreenComp isCameraView={false} isLog={true}>\r\n      <ShellLike theme={use} ref={shell} id=\"shell\"></ShellLike>\r\n    </ScreenComp>\r\n  );\r\n};\r\nexport default LogData;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport vid from \"../assets/videoo.mp4\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport ControlsContext from \"../ControlsContext\";\r\nimport LogContext from \"../LogContext\";\r\nimport ThemeContext from \"../theme/ThemeContext\";\r\n\r\nconst bubbling = keyframes`\r\n  from{\r\n    top: -4px;\r\n  } \r\n  to{\r\n    top: -1px;\r\n  }\r\n`;\r\nconst ProgressBar = styled.div`\r\n  height: ${(props) => props.loaded}%;\r\n  text-align: center;\r\n  background-color: rgb(89, 89, 247);\r\n  position: relative;\r\n  & .bubble-left {\r\n    background: rgb(89, 89, 247);\r\n    width: 49px;\r\n    height: 26px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: -4px;\r\n    left: -10px;\r\n    animation: 0.5s ${bubbling} linear 0.3s infinite alternate;\r\n  }\r\n  & .bubble-right {\r\n    background: rgb(89, 89, 247);\r\n    width: 48px;\r\n    height: 26px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: -4px;\r\n    right: -10px;\r\n    animation: 0.5s ${bubbling} linear infinite alternate;\r\n  }\r\n`;\r\nconst ProgressContainer = styled.div`\r\n  width: 45px;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  background-color: ${(props) => props.theme.use.shellAndProg.bg};\r\n  align-self: center;\r\n  margin: 0 0.5rem;\r\n  border-top-left-radius: 25px;\r\n  border-top-right-radius: 25px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  overflow: hidden;\r\n`;\r\nconst Precentage = styled.div`\r\n  color: rgb(89, 89, 247);\r\n  text-align: center;\r\n  padding: 0.5rem;\r\n`;\r\nconst Progress = () => {\r\n  const theme = useContext(ThemeContext);\r\n  // eslint-disable-next-line\r\n  const [stages, dispatch] = useContext(ControlsContext);\r\n  const [precentage, setPrecentage] = useState(0);\r\n  // eslint-disable-next-line\r\n  const [log, setLog] = useContext(LogContext);\r\n  const downloadProg = async () => {\r\n    // resp and reader\r\n    let response = await fetch(vid);\r\n    let reader = response.body.getReader();\r\n\r\n    // get total content length\r\n    let totalLength = +response.headers.get(\"Content-Length\");\r\n\r\n    // start reading\r\n    let received = 0;\r\n    let chunks = [];\r\n    const updateWithDataProgress = (v) => {\r\n      if (v !== Math.round((received / totalLength) * 100)) {\r\n        return Math.round((received / totalLength) * 100);\r\n      } else {\r\n        return v;\r\n      }\r\n    };\r\n\r\n    while (true) {\r\n      // extract chunks or finish\r\n      const { done, value } = await reader.read();\r\n\r\n      if (done) {\r\n        // end loop\r\n        break;\r\n      }\r\n      setLog((log) => {\r\n        if (value.toString() !== log) return value.slice(0, 3).toString();\r\n        return log;\r\n      });\r\n      // save indivisual chunks\r\n      chunks.push(value);\r\n      // update total recevied so far\r\n      received += value.length;\r\n      // update percentage for progress bar in the UI\r\n      setPrecentage(updateWithDataProgress);\r\n    }\r\n\r\n    let chunksAll = new Uint8Array(received);\r\n    let position = 0;\r\n\r\n    for (let chunk of chunks) {\r\n      chunksAll.set(chunk, position);\r\n      position += chunk.length;\r\n    }\r\n\r\n    let blob = new Blob([chunksAll], { type: \"video/mp4\" });\r\n    let content = URL.createObjectURL(blob);\r\n\r\n    // this dispatch leads to 'fire'..it sets satges.ready to true\r\n\r\n    dispatch({\r\n      type: \"READY\",\r\n      payload: {\r\n        vidData: content,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (stages.start) {\r\n      downloadProg();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [stages.start]);\r\n\r\n  // reset fule tank/downlaod progress\r\n  useEffect(() => {\r\n    if (stages.ready) {\r\n      document.querySelector(\"#vid\").addEventListener(\"ended\", () => {\r\n        setPrecentage(0);\r\n      });\r\n    }\r\n  }, [stages.ready]);\r\n\r\n  return (\r\n    <div>\r\n      <ProgressContainer id=\"progress-bar-itself-container\" theme={theme}>\r\n        <ProgressBar id=\"progress-bar-itself\" loaded={precentage}>\r\n          <div className=\"bubble-left\"></div>\r\n          <div className=\"bubble-right\"></div>\r\n        </ProgressBar>\r\n      </ProgressContainer>\r\n      <Precentage>{precentage}%</Precentage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import React from \"react\";\r\nimport LogData from \"./LogData\";\r\nimport Progress from \"../../comps/progress\";\r\nimport ScreenComp from \"../../comps/ScreenComp\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LogAndProgressContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 0.8rem;\r\n`;\r\n\r\nconst Log = () => {\r\n  return (\r\n    <ScreenComp isCameraView={false}>\r\n      <LogAndProgressContainer>\r\n        <LogData></LogData>\r\n        <Progress />\r\n      </LogAndProgressContainer>\r\n    </ScreenComp>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n","import React, { useContext } from \"react\";\r\nimport ScreenComp from \"../../comps/ScreenComp\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ThemeContext from \"../../theme/ThemeContext\";\r\n\r\nconst MyFontAwsm = styled(FontAwesomeIcon)`\r\n  margin: 0 0.5rem;\r\n  font-size: 1.5rem;\r\n  color: ${(props) => props.theme.settingsIcons.bg};\r\n  &:hover {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst SettingsOptions = styled.div`\r\n  width: 100%;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 1.5rem;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\nconst SettingsAndFollow = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n`;\r\nconst Social = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: white;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n  & svg {\r\n    font-size: 3rem;\r\n    margin-bottom: 0.8rem;\r\n  }\r\n  & #follow-me {\r\n    color: red;\r\n  }\r\n`;\r\nconst Settings = () => {\r\n  const { use, setTheme } = useContext(ThemeContext);\r\n  return (\r\n    <SettingsAndFollow>\r\n      <ScreenComp isCameraView={false} isLog={false}>\r\n        <SettingsOptions>\r\n          <MyFontAwsm\r\n            theme={use}\r\n            icon=\"sun\"\r\n            onClick={(e) => {\r\n              import(\"../../theme/theme\").then(({ light }) => {\r\n                setTheme(light);\r\n              });\r\n            }}\r\n          />\r\n          <MyFontAwsm\r\n            theme={use}\r\n            icon=\"moon\"\r\n            onClick={(e) => {\r\n              import(\"../../theme/theme\").then(({ dark }) => {\r\n                setTheme(dark);\r\n              });\r\n            }}\r\n          />\r\n          <MyFontAwsm\r\n            theme={use}\r\n            icon=\"compress\"\r\n            onClick={(e) => {\r\n              if (document.fullscreenEnabled) {\r\n                if (!document.fullscreenElement) {\r\n                  document.documentElement.requestFullscreen();\r\n                } else {\r\n                  document.exitFullscreen();\r\n                }\r\n              } else {\r\n                alert(\r\n                  \"Fullscreen is not supported on \" +\r\n                    navigator.userAgent +\r\n                    \"try the app on a diffrent browser\"\r\n                );\r\n              }\r\n            }}\r\n          />\r\n        </SettingsOptions>\r\n      </ScreenComp>\r\n      <ScreenComp>\r\n        <Social>\r\n          <MyFontAwsm theme={use} icon=\"user-astronaut\" />\r\n          <p id=\"follow-me\">\r\n            Follow me{\" \"}\r\n            <a href=\"https://www.imustafa.com\" target=\"_new\">\r\n              here\r\n            </a>\r\n          </p>\r\n        </Social>\r\n      </ScreenComp>\r\n    </SettingsAndFollow>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Buttons from \"./board/buttons/Buttons\";\r\nimport Log from \"./board/log/Log\";\r\nimport Settings from \"./board/Contact/Settings\";\r\n\r\nconst Controls = styled.div`\r\n  padding: 0.5rem;\r\n  min-width: 300px;\r\n  width: 25%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Board = () => {\r\n  return (\r\n    <Controls>\r\n      <Buttons />\r\n      <Log />\r\n      <Settings />\r\n    </Controls>\r\n  );\r\n};\r\nexport default Board;\r\n","import React, { useContext, useRef, useEffect } from \"react\";\r\nimport ControlsContext from \"./ControlsContext\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport ScreenComp from \"./comps/ScreenComp\";\r\nimport LiveImg from \"./assets/live.jpg\";\r\n\r\nconst signaling = keyframes`\r\n  from {\r\n    background-color: #ff00008f;\r\n  }\r\n  to{\r\n    background-color: red;\r\n  }\r\n`;\r\nconst Video = styled.video`\r\n  @media (min-width: 1500px) {\r\n    width: 1800px;\r\n    position: absolute;\r\n    left: -200px;\r\n  }\r\n  @media (max-width: 1500px) {\r\n    width: 1513px;\r\n    position: absolute;\r\n    left: -240px;\r\n  }\r\n  @media (max-width: 1100px) {\r\n    width: 1513px;\r\n    position: absolute;\r\n    left: -150px;\r\n  }\r\n`;\r\nconst Display = styled.div`\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  background-color: #303030;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  background-image: url(${(props) =>\r\n    props.start === \"true\" ? LiveImg : \"none\"});\r\n`;\r\nconst LiveStatus = styled.div`\r\n  z-index: 3000;\r\n  position: absolute;\r\n  right: 5%;\r\n  top: 5%;\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  & .live {\r\n    color: white;\r\n    font-weight: 900;\r\n    font-size: 1.5rem;\r\n  }\r\n  & .signal {\r\n    margin-right: 0.5rem;\r\n    padding: 0.8rem;\r\n    border-radius: 50%;\r\n    background-color: red;\r\n    animation: 0.5s ${signaling} infinite;\r\n    animation-direction: alternate;\r\n  }\r\n`;\r\n\r\nconst Screen = () => {\r\n  // eslint-disable-next-line\r\n  const [stages, dispatch] = useContext(ControlsContext);\r\n  const vidRef = useRef();\r\n\r\n  // make the vid play();\r\n  useEffect(() => {\r\n    if (stages.ready && stages.fire) {\r\n      vidRef.current.play();\r\n    }\r\n  }, [stages.fire, stages.ready]);\r\n\r\n  return (\r\n    <ScreenComp isCameraView={true}>\r\n      <Display start={stages.start ? \"true\" : \"false\"}>\r\n        {stages.start && (\r\n          <LiveStatus>\r\n            <div className=\"signal\"></div>\r\n            <div className=\"live\">Live</div>\r\n          </LiveStatus>\r\n        )}\r\n\r\n        {stages.ready && (\r\n          <Video\r\n            id=\"vid\"\r\n            ref={vidRef}\r\n            onContextMenu={(e) => e.preventDefault()}\r\n          >\r\n            <source src={stages.vidData} type=\"video/mp4\"></source>\r\n          </Video>\r\n        )}\r\n      </Display>\r\n    </ScreenComp>\r\n  );\r\n};\r\nexport default Screen;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from \"./Board\";\r\nimport Screen from \"./Screen\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst ControlStation = () => {\r\n  return (\r\n    <Container>\r\n      <Board></Board>\r\n      <Screen></Screen>\r\n    </Container>\r\n  );\r\n};\r\nexport default ControlStation;\r\n","import React, { useReducer, useState, useContext } from \"react\";\r\nimport ControlStation from \"./ControlStation\";\r\nimport ControlsContext from \"./ControlsContext\";\r\nimport LogContext from \"./LogContext\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab, faLinkedin, faRedhat } from \"@fortawesome/free-brands-svg-icons\";\r\nimport ThemeContext from \"./theme/ThemeContext\";\r\nimport { dark } from \"./theme/theme\";\r\nimport {\r\n  faSun,\r\n  faMoon,\r\n  faCompress,\r\n  faVolumeMute,\r\n  faUserAstronaut,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(\r\n  fab,\r\n  faLinkedin,\r\n  faRedhat,\r\n  faSun,\r\n  faMoon,\r\n  faCompress,\r\n  faVolumeMute,\r\n  faUserAstronaut\r\n);\r\n\r\nconst Globals = createGlobalStyle`\r\n\r\n* {\r\n  box-sizing: border-box !important;\r\n}\r\n\r\nbody,\r\nhtml,\r\n#root {\r\n  font-family: monospace;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100vh;\r\n  background-color: ${(props) => props.theme.use.body.bg}\r\n}\r\n\r\n* :focus {\r\n  outline: none;\r\n}\r\n\r\ncircle {\r\n  transition: stroke-dashoffset 0.35s;\r\n  transform: rotate(-90deg);\r\n  transform-origin: 50% 50%;\r\n}\r\n\r\n\r\n`;\r\nconst WrapGlobals = () => {\r\n  const theme = useContext(ThemeContext);\r\n  return <Globals theme={theme} />;\r\n};\r\nconst initialState = {\r\n  start: false,\r\n  ready: false,\r\n  fire: false,\r\n  vidData: null,\r\n  stateText: \"START\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === \"START\") {\r\n    return {\r\n      ...state,\r\n      start: true,\r\n      stateText: \"Injecting\",\r\n    };\r\n  }\r\n  if (action.type === \"READY\") {\r\n    return {\r\n      ...state,\r\n      ready: true,\r\n      stateText: \"Fire\",\r\n      vidData: action.payload.vidData,\r\n    };\r\n  }\r\n  if (action.type === \"FIRE\") {\r\n    return {\r\n      ...state,\r\n      stateText: action.payload.text,\r\n      fire: action.payload.fire,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REPEAT\") {\r\n    return initialState;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst App = () => {\r\n  const stages = useReducer(reducer, initialState);\r\n  const log = useState(\"\");\r\n  const [use, setTheme] = useState(dark);\r\n\r\n  return (\r\n    <ControlsContext.Provider value={stages}>\r\n      <LogContext.Provider value={log}>\r\n        <ThemeContext.Provider value={{ use, setTheme }}>\r\n          <WrapGlobals />\r\n          <ControlStation></ControlStation>\r\n        </ThemeContext.Provider>\r\n      </LogContext.Provider>\r\n    </ControlsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}